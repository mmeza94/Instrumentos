<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="Assignment" xml:space="preserve">
    <value>Asignación</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Disponible</value>
  </data>
  <data name="CalibrationDate" xml:space="preserve">
    <value>Fecha de calibración</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="DeleteImageAlt" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Baja</value>
  </data>
  <data name="ErrorDelMachineTool" xml:space="preserve">
    <value>Error al remover el instrumento de la maquina.</value>
  </data>
  <data name="ErrorDelTool" xml:space="preserve">
    <value>Error al eliminar el instrumento. Se puede deber a que el instrumento está asociado a una máquina.</value>
  </data>
  <data name="ErrorDelToolType" xml:space="preserve">
    <value>Error al eliminar el tipo de instrumento. Se puede deber a que existen instrumentos asociados a este tipo.</value>
  </data>
  <data name="ErrorInsMachineTool" xml:space="preserve">
    <value>Error al asignar herramienta a la maquina. Se puede deber a que ya existe un instrumento del mismo tipo asociado.</value>
  </data>
  <data name="ErrorInsTool" xml:space="preserve">
    <value>Error al insertar el instrumento. Se puede deber a que el código proporcionado ya existe.</value>
  </data>
  <data name="ErrorInsToolType" xml:space="preserve">
    <value>Error al insertar tipo de instrumento. Se puede deber a que el nombre proporcionado ya existe.</value>
  </data>
  <data name="ExpirationDate" xml:space="preserve">
    <value>Fecha de expiración</value>
  </data>
  <data name="Instruments" xml:space="preserve">
    <value>Instrumentos</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NewData" xml:space="preserve">
    <value>Nuevos datos</value>
  </data>
  <data name="NewTool" xml:space="preserve">
    <value>Nuevo instrumento</value>
  </data>
  <data name="NewToolType" xml:space="preserve">
    <value>Nuevo tipo de instrumentos</value>
  </data>
  <data name="NoRecords" xml:space="preserve">
    <value>No hay registros que mostrar</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>No disponible</value>
  </data>
  <data name="SelectedTool" xml:space="preserve">
    <value>Instrumento seleccionado</value>
  </data>
  <data name="SelectOne" xml:space="preserve">
    <value>Seleccione una opción</value>
  </data>
  <data name="TenarisLogo" xml:space="preserve">
    <value>Logo de Tenaris</value>
  </data>
  <data name="ToolAssignation" xml:space="preserve">
    <value>Asignación de instrumentos</value>
  </data>
  <data name="ToolCatalog" xml:space="preserve">
    <value>Catálogo de herramientas</value>
  </data>
  <data name="ToolIndexPageTitle" xml:space="preserve">
    <value>Herramientas</value>
  </data>
  <data name="ToolType" xml:space="preserve">
    <value>Tipo de instrumentos</value>
  </data>
  <data name="ToolTypeCatalog" xml:space="preserve">
    <value>Catálogo de tipos de herramientas</value>
  </data>
  <data name="ToolTypeIndexPageTitle" xml:space="preserve">
    <value>Tipos de instrumentos</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="UpdateImageAlt" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="ValidationToolTypeNameMissing" xml:space="preserve">
    <value>El nombre para el tipo de instrumento es obligatorio.</value>
  </data>
  <data name="ValidationToolTypeNameTooLong" xml:space="preserve">
    <value>El nombre para el tipo de instrumento no debe de exceder 50 caracteres.</value>
  </data>
  <data name="ValidationExpirationDate" xml:space="preserve">
    <value>La fecha de expiración no puede ser menor a la fecha de calibración</value>
  </data>
  <data name="ValidationToolCodeMissing" xml:space="preserve">
    <value>El código para el instrumento es obligatorio</value>
  </data>
  <data name="ValidationToolCodeTooLong" xml:space="preserve">
    <value>El código para el instrumento no debe de exceder 20 caracteres</value>
  </data>
  <data name="ValidationTypeMissing" xml:space="preserve">
    <value>Se debe seleccionar un tipo de instrumento.</value>
  </data>
  <data name="ValidationSameTypeAssignation" xml:space="preserve">
    <value>Ya existe un instrumento de este tipo asociado a la máquina.</value>
  </data>
  <data name="DownArrowImageAlt" xml:space="preserve">
    <value>Desasignar</value>
  </data>
  <data name="UpArrowControlImageAlt" xml:space="preserve">
    <value>Asignar para control</value>
  </data>
  <data name="UpArrowMeasureImageAlt" xml:space="preserve">
    <value>Asignar para medición</value>
  </data>
  <data name="RightArrow" xml:space="preserve">
    <value>Compartir con Pintado</value>
  </data>
</root>